@model RailroadTransport.ViewModels.PostViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string nameOfPost = Model.NameOfPost;
}

<h2>Должности</h2>

<p><a class="btn btn-outline-dark" asp-action="Create">Добавить</a></p>
<p><a class="btn btn-outline-dark" asp-action="ClearCache">Очистить фильтр</a></p>
@using (Html.BeginForm("Index", "Post", FormMethod.Get))
{
    <fieldset>
        Наименование должности: @Html.TextBox("NameOfPost", Model.NameOfPost)
        <input type="submit" value="Найти"/>
    </fieldset>
}

<table class="table" align="center">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Posts.FirstOrDefault().PostId)</th>
            <th><a asp-action="Index" asp-route-sortState=@Model.SortViewModel.NameOfPostSort asp-route-NameOfPost="@nameOfPost">
                @Html.DisplayNameFor(model => model.Posts.FirstOrDefault().NameOfPost)</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Posts)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.PostId)</td>
                <td>@Html.DisplayFor(modelItem => item.NameOfPost)</td>
                <td>
                    <a class="btn btn-outline-dark" asp-action="Edit" asp-route-id="@item.PostId">Редактировать</a> |
                    <a class="btn btn-outline-dark" asp-action="Delete" asp-route-id="@item.PostId">Удалить</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-outline-dark">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-outline-dark">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}